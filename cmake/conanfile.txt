[requires]
# Required for CucumberCpp (it bundles it but doesn't install it)
# TODO(DF): maybe not needed for CucumberCpp 0.7.0
gtest/1.14.0
# Required for CucumberCpp 0.7.0
nlohmann_json/3.11.3
# Required for CucumberCpp 0.7.0
tclap/1.2.5

# YAML parser
# - Used to parametrise network structure
# - Dependency of cucumber-cpp-runner
yaml-cpp/0.8.0

# JSON parser
# - Dependency of CucumberCpp
nlohmann_json/3.11.3

# Async networking library extracted from boost.
# - Dependency of cucumber-cpp-runner
# - Dependency of CucumberCpp
asio/1.29.0

# Pin to boost version such that OpenImageIO supports boost::filesystem without undefined
# references
# TODO(DF): may not be necessary if/when libstdc++ can be upgraded i.e. when Clang 17 is in
#   Conda)
boost/1.77.0

# String formatting. Must override dependency of openimageio or get ambiguous calls to
# `std::signbit` et al.
# TODO(DF): may not be necessary if/when libstdc++ can be upgraded i.e. when Clang 17 is in
#   Conda)
fmt/7.1.3

# Eigen linear algebra library
eigen/3.4.0

# OpenImageIO image loading/processing library
openimageio/2.4.7.1

# Override to >=v3 so that Imath is used, rather than a fallback (OIIO_USING_IMATH), which works
# around "error: definition of type 'half' conflicts with typedef of the same name" when CUDA
# (via OpenSYCL) is also included.
openexr/3.1.5

# range-v3 (whilst waiting for std::range) library
range-v3/0.12.0

[options]

boost/*:shared=True

openimageio/*:shared=True
openimageio/*:fPIC=True
openimageio/*:with_libjpeg=libjpeg
openimageio/*:with_libpng=True
openimageio/*:with_freetype=False
openimageio/*:with_hdf5=False
openimageio/*:with_opencolorio=False
openimageio/*:with_opencv=False
openimageio/*:with_tbb=False
openimageio/*:with_dicom=False
openimageio/*:with_ffmpeg=False
openimageio/*:with_giflib=False
openimageio/*:with_libheif=False
openimageio/*:with_raw=False
openimageio/*:with_openjpeg=False
openimageio/*:with_openvdb=False
openimageio/*:with_ptex=False
openimageio/*:with_libwebp=False

[generators]
CMakeDeps
CMakeToolchain


